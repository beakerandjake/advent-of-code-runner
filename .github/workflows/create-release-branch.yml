name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        type: choice
        options:
        - 'patch'
        - 'minor'
        - 'major'
        - 'prepatch'
        - 'preminor'
        - 'premajor'
        - 'prerelease'
        
jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Configure Git User
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          
      - name: Version (latest)
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: Version (pre-release)
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo $RELEASE_TYPE
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
              
      - name: Create Release Branch
        run: git checkout -b ${{ format('release/{0}', env.NEW_VERSION) }}
          
      - name: Commit changes
        run: |
          git add "package.json"
          git add "package-lock.json"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          
      - name: Git Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git push -u origin ${{ format('release/{0}', env.NEW_VERSION) }}
      
      - name: Create Pull Request
        run: gh pr create --base main -title "${{ format('release/{0}', env.NEW_VERSION) }}" --body 'Created by Github action'
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
