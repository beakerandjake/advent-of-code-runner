# Creates a release pull request into main.

name: Create Release Pull Request
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        type: choice
        # The first option provided is the default selection, make this "please select" to ensure user has to explicitly choose a release type. 
        options:
        - please select
        - patch
        - minor
        - major
        - prepatch
        - preminor
        - premajor
        - prerelease

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: validate selected release type - "${{ github.event.inputs.release-type }}"
        if: contains(fromJSON('["patch","minor","major","prepatch","preminor","premajor","prerelease"]'), github.event.inputs.release-type) == false
        uses: actions/github-script@v6
        with:
          script: core.setFailed('Please choose a valid Release Type!')
          
      - name: harden runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit
          
      - name: checkout project
        uses: actions/checkout@v3
          
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
#       - name: run tests
#         run: |
#           npm ci
#           npm test

      - name: npm version (@latest)
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: npm version (@prerelease)
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: update CHANGELOG
        uses: superfaceai/release-changelog-action@b1411d74107d4691016c93940673c67535a927aa # v2.0.0
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: release
          
      - name: commit changes
        run: |
          git add "package.json"
          git add "package-lock.json"
          git add "CHANGELOG.md"
          git commit -m "chore: release ${{ env.NEW_VERSION }}"
          
      - id: get-changelog
        name: Get changes for Release
        uses: superfaceai/release-changelog-action@b1411d74107d4691016c93940673c67535a927aa # v2.0.0
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: read
          
      - name: create pull request
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
        with:
          branch: ${{ format('release/{0}', env.NEW_VERSION) }}
          title: Release ${{ env.NEW_VERSION }} 
          body: |
            Automated PR to bump the package.json version and update the CHANGELOG to prepare for a release. 
            Once merged into main, you can run the 'TODO LINK' action to perform an actual publish to NPM.
            
            ## Changes
            
            ${{ steps.get-changelog.outputs.changelog }}
