# Creates a release pull request into main, bumps package version and updates changelog.

name: Create Release Pull Request
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type'
        required: true
        type: choice
        # The first option provided is the default selection, make this "please select" to ensure user has to explicitly choose a release type. 
        options:
        - please select
        - patch
        - minor
        - major
        - prepatch
        - preminor
        - premajor
        - prerelease

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Validate selected release type - "${{ github.event.inputs.release-type }}"
        if: contains(fromJSON('["patch","minor","major","prepatch","preminor","premajor","prerelease"]'), github.event.inputs.release-type) == false
        uses: actions/github-script@v6
        with:
          script: core.setFailed('Please choose a valid Release Type!')
          
      - name: Harden runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
          
      - name: Checkout Repository
        uses: actions/checkout@v3
          
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Run npm version (@latest)
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: Run npm version (@prerelease)
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version --preid=beta version $RELEASE_TYPE)" >> $GITHUB_ENV
          echo "RELEASE_TAG=beta" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}

      - name: Update CHANGELOG
        uses: superfaceai/release-changelog-action@b1411d74107d4691016c93940673c67535a927aa # v2.0.0
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: release
        
      - name: Load CHANGELOG Contents
        id: get-changelog
        uses: superfaceai/release-changelog-action@b1411d74107d4691016c93940673c67535a927aa # v2.0.0
        with:
          path-to-changelog: CHANGELOG.md
          version: ${{ env.NEW_VERSION }}
          operation: read
          
      - name: Create PR
        uses: peter-evans/create-pull-request@2b011faafdcbc9ceb11414d64d0573f37c774b04
        with:
          token: ${{ secrets.CREATE_PR_GITHUB_PAT }}
          branch: ${{ format('release/{0}', env.NEW_VERSION) }}
          title: Release ${{ env.NEW_VERSION }} 
          body: |
            ## Release ${{ env.NEW_VERSION }} 
            _Automated Pull Request created by Github Action_
            - Updates package.json with new version and updates CHANGELOG.md.
            - Once merged into main, you can run the 'TODO LINK' action to perform an actual publish to NPM.

            ## Changes
            _from CHANGELOG.md_
            
            ${{ steps.get-changelog.outputs.changelog }}
