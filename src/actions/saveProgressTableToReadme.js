import { outputFile } from 'fs-extra/esm';
import { readFile } from 'node:fs/promises';
import { getConfigValue } from '../config.js';
import { logger } from '../logger.js';
import { readmeExists } from '../validation/userFilesExist.js';
/**
 * Regex to find and replace the table in an existing readme.
 */
const tableEnclosingTagRegex =
  /(<!--START_AUTOGENERATED_COMPLETION_PROGRESS_SECTION-->)(.*?)(<!--END_AUTOGENERATED_COMPLETION_PROGRESS_SECTION-->)/is;

/**
 * Saves a table to the users readme which shows the users progress for the year.
 */
export const saveProgressTableToReadme = async ({ progressTable } = {}) => {
  if (!progressTable) {
    throw new Error('null or undefined progressTable');
  }

  if (!(await readmeExists())) {
    logger.error(
      'Could not find README file in your repository. This file should have been created by the "init" command'
    );
    return false;
  }

  const readmePath = getConfigValue('paths.readme');
  const contents = await readFile(readmePath, 'utf-8');

  // ensure the enclosing tag exists
  if (contents.search(tableEnclosingTagRegex) <= 0) {
    logger.error(
      'Could not find required tag in readme file to insert table, this tag should have been created during the "init" command'
    );
    return false;
  }

  // replace the content inside of the enclosing tag with the new value.
  const newContents = contents.replace(
    tableEnclosingTagRegex,
    `$1\n${progressTable}\n$3`
  );
  await outputFile(readmePath, newContents);

  logger.festive('Saved progress to your README file');

  return true;
};
