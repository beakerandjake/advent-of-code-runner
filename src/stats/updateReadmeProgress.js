import { outputFile } from 'fs-extra/esm';
import { readFile } from 'node:fs/promises';
import { getConfigValue } from '../config.js';
import { FileNotFoundError } from '../errors/cliErrors.js';
import { readmeExists } from '../validation/userFilesExist.js';
import { logger } from '../logger.js';
/**
 * Regex to find and replace the table in an existing readme.
 */
const tableEnclosingTagRegex =
  /(<!--START_AUTOGENERATED_COMPLETION_PROGRESS_SECTION-->)(.*?)(<!--END_AUTOGENERATED_COMPLETION_PROGRESS_SECTION-->)/is;

/**
 * Saves a table to the users readme which shows the users progress for the year.
 */
export const updateReadmeProgressTable = async (progressTable) => {
  if (!progressTable) {
    throw new Error('null or undefined progressTable');
  }
  if (!(await readmeExists())) {
    throw new FileNotFoundError('README');
  }

  const readmePath = getConfigValue('paths.readme');
  const contents = await readFile(readmePath, 'utf-8');

  // ensure the enclosing tag exists
  if (contents.search(tableEnclosingTagRegex) <= 0) {
    throw new Error(
      'could not find progress tag in README, this tag was created during init'
    );
  }

  logger.debug('updating progress table of readme file at: %s', readmePath);

  // update the readme with the new table.
  await outputFile(
    readmePath,
    contents.replace(tableEnclosingTagRegex, `$1\n${progressTable}\n$3`)
  );
};
